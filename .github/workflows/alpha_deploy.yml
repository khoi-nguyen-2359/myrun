name: Deploy Alpha

on:
  push:
    branches:
      - deploy/[0-9]+.[0-9]+.[0-9]+

jobs:
  deploy:
    name: Deploy Alpha
    runs-on: ubuntu-latest

    steps:
      - name: Checkout The Code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Configure Release Credentials
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.RELEASE_GOOGLE_SERVICES_JSON_BASE64 }}
          REGISTRATION_CREDENTIALS: ${{ secrets.RELEASE_REGISTRATION_CREDENTIALS_BASE64 }}
          LOCATION_CREDENTIALS: ${{ secrets.RELEASE_LOCATION_CREDENTIALS_BASE64 }}
          MAPBOX_DOWNLOAD_TOKEN: ${{ secrets.MAPBOX_SDK_DOWNLOAD_TOKEN }}

        run: |
          mkdir app/src/release/
          echo "$GOOGLE_SERVICES_JSON" > google-services.json.b64
          base64 -d -i google-services.json.b64 > app/src/release/google-services.json
          mkdir -p feature/registration/src/release/res/values/
          echo "$REGISTRATION_CREDENTIALS" > reg_credentials.xml.b64
          base64 -d -i reg_credentials.xml.b64 > feature/registration/src/release/res/values/credentials.xml
          mkdir -p data/location/src/release/res/values/
          echo "$LOCATION_CREDENTIALS" > loc_credentials.xml.b64
          base64 -d -i loc_credentials.xml.b64 > data/location/src/release/res/values/credentials.xml
          touch local.properties & echo -e "mapbox.downloads.token=$MAPBOX_DOWNLOAD_TOKEN" >> local.properties

      - name: Bundle Release
        run: bash ./gradlew bundleRelease

      - name: Run Release Unit Tests
        run: bash ./gradlew testReleaseUnitTest

      - name: Sign Release
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.RELEASE_PLAY_STORE_UPLOAD_KEY }}
          alias: ${{ secrets.RELEASE_PLAY_STORE_UPLOAD_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.RELEASE_PLAY_STORE_UPLOAD_KEY_PWD }}
          keyPassword: ${{ secrets.RELEASE_PLAY_STORE_UPLOAD_KEY_PWD }}

      - name: Create service_account.json
        run: echo '${{ secrets.DEPLOY_SERVICE_ACCOUNT_PRIVATE_KEY }}' > service_account.json

      - name: Deploy to Alpha
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJson: service_account.json
          packageName: akio.apps.myrun
          releaseFiles: app/build/outputs/bundle/release/app-release.aab
          track: alpha
          whatsNewDirectory: distribution
          mappingFile: app/build/outputs/mapping/release/mapping.txt

  tag:
    name: Tag Release
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v2
      - run: |
          version_name=${GITHUB_REF##*/}
          echo "Tagging release with tag $version_name"
          git tag $version_name deploy/$version_name
          git push origin --tags

  pr:
    name: Pull Request On Develop
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - uses: actions/checkout@v2

      - uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.MYRUN_GITHUB_APP_ID }}
          private_key: ${{ secrets.MYRUN_GITHUB_APP_PRIVATE_KEY }}

      - uses: repo-sync/pull-request@v2
        with:
          destination_branch: "develop"
          pr_title: "Pulling ${{ github.ref }} into develop"
          pr_label: "Auto-PR"
          github_token: ${{ steps.generate-token.outputs.token }}
