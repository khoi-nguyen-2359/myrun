plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
}

android {
    compileSdk project.compileSdk

    defaultConfig {
        minSdkVersion project.minSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        rc { }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.get()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
        useIR = true
        allWarningsAsErrors = true
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
}

dependencies {
    implementation(project(':features:base'))

    implementation(project(':wiring'))

    implementation(project(':common:wiring'))
    implementation(project(':common:data'))
    implementation(project(':common:feature'))

    implementation(project(':worker'))
    implementation(libs.workManager) // still needed when using module 'worker'

    implementation(libs.androidMaterial)
    implementation(libs.constraintLayout)
    implementation(libs.bundles.compose)
    implementation(libs.accompanistInsets)
    implementation(libs.coilCompose)

    implementation(libs.androidXAppCompat)
    implementation(libs.timber)
    implementation(libs.lifecycleViewModelKtx)
    implementation(libs.dagger)
    kapt(libs.daggerCompiler)
}
