[versions]
agp = "7.0.2"
ksp = "1.5.30-1.0.0"
multidex = "1.0.3"

kotlin = "1.5.21"
coroutines = "1.5.1"
kotlinSerialization = "1.2.1"

# jetpack: https://developer.android.com/jetpack/androidx/versions/all-channel
androidXCore = "1.6.0"
appCompat = "1.3.1"
activity = "1.3.0"
fragment = "1.3.6"
constraintLayout = "2.1.0"
androidMaterial = "1.4.0"
dataStore = "1.0.0"
workManager = "2.7.0-beta01"
paging = "3.0.1"
room = "2.3.0"
lifecycle = "2.4.0-alpha03"
splashScreen = "1.0.0-alpha01"

# compose
compose = "1.0.2"
composeConstraintLayout = "1.0.0-beta02"
pagingCompose = "1.0.0-alpha12"
accompanist = "0.17.0"
composeNavigation = "2.4.0-alpha08"

# google play services: https://developers.google.com/android/guides/releases
playServicesGradlePlugin = "4.3.10"  # https://developers.google.com/android/guides/google-services-plugin
playServicesGcm = "17.0.0"
playServicesLocation = "18.0.0"
playServicesAuth = "19.2.0"
playServicesFitness = "20.0.0"

# google map
androidGoogleMap = "17.0.1"
googlePlaces = "2.4.0"
androidMapUtils = "2.2.5"

# firebase
firebaseBom = "28.4.0"
crashlyticsGradlePlugin = "2.7.1"
firebasePerf = "1.4.0"
guava = "30.1.1-android"

# others
okhttp = "4.9.1"
gson = "2.8.6"
retrofit = "2.9.0"
dagger = "2.38.1"
timber = "4.7.1"
glide = "4.12.0"
coil = "1.3.0"
facebookSdk = "9.1.1"
tcxzPot = "0.2.0"
autoValueAnnotation = "1.6.3"
leakCanary = "2.7"
javaXInject = "1"

# testing
junit = "4.13.2"
androidXCoreTesting = "2.1.0"
mockitoCore = "3.11.2"
mockitoKotlin = "3.2.0"
mockitoAndroid = "3.5.10"
androidXTestRunner = "1.4.0"
androidXTestRules = "1.4.0"
androidXJunit = "1.1.3"
uiAutomator = "2.2.0"
espresso = "3.4.0"
turbine = "0.6.0"

[libraries]
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp"}
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
playServicesGradlePlugin = { module = "com.google.gms:google-services", version.ref = "playServicesGradlePlugin" }
firebaseCrashlyticsGradle = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "crashlyticsGradlePlugin" }
firebasePerf = { module = "com.google.firebase:perf-plugin", version.ref = "firebasePerf" }
viewBinding = { module = "androidx.databinding:viewbinding", version.ref = "agp"}

multidex = { module = "com.android.support:multidex", version.ref = "multidex" }
androidXCore = { module = "androidx.core:core-ktx", version.ref = "androidXCore" }
androidXAppCompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
androidMaterial = { module = "com.google.android.material:material", version.ref = "androidMaterial" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
paging = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
activity = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
workManager = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }

# compose
composeUi = { module = "androidx.compose.ui:ui", version.ref = "compose" }
composeUiTooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
composeFoundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
composeMaterial = { module = "androidx.compose.material:material", version.ref = "compose" }
composeMaterialIconsCore = { module = "androidx.compose.material:material-icons-core", version.ref = "compose" }
composeMaterialIconsExtended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
composeRuntimeLiveData = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
composeActivity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
composePaging = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
coilCompose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
accompanistPlaceholder = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanistInsets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }
composeNavigation = { module = "androidx.navigation:navigation-compose", version.ref = "composeNavigation" }
accompanistNavigation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }

# dagger
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerAndroid = { module = "com.google.dagger:dagger-android", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

# kotlinx
kotlinxCoroutinesCore = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinxCoroutinesAndroid = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinxCoroutinesPlayServices = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
kotlinxSerializationProtoBuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinSerialization" }

# kotlin
kotlinSerialization = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# firebase
firebaseBom = { module = "com.google.firebase:firebase-bom", version.ref = "firebaseBom" }
firebaseAuthKtx = { module = "com.google.firebase:firebase-auth-ktx" }
firebaseFirestoreKtx = { module = "com.google.firebase:firebase-firestore-ktx" }
firebaseCrashlyticsKtx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebaseAnalyticsKtx = { module = "com.google.firebase:firebase-analytics-ktx" }
firebaseStorageKtx = { module = "com.google.firebase:firebase-storage-ktx" }
firebasePerfKtx = { module = "com.google.firebase:firebase-perf-ktx" }

# playservices
playServicesLocation = { module = "com.google.android.gms:play-services-location", version.ref = "playServicesLocation" }
playServicesAuth = { module = "com.google.android.gms:play-services-auth", version.ref = "playServicesAuth" }
playServicesFitness = { module = "com.google.android.gms:play-services-fitness", version.ref = "playServicesFitness" }
playServicesGcm = { module = "com.google.android.gms:play-services-gcm", version.ref = "playServicesGcm" }

# google maps
androidMapUtils = { module = "com.google.maps.android:android-maps-utils", version.ref = "androidMapUtils" }
androidGoogleMap = { module = "com.google.android.gms:play-services-maps", version.ref = "androidGoogleMap" }
googlePlaces = { module = "com.google.android.libraries.places:places", version.ref = "googlePlaces" }

# room
roomRuntime = { module = "androidx.room:room-runtime", version.ref = "room" }
roomCompiler = { module = "androidx.room:room-compiler", version.ref = "room" }
roomKtx = { module = "androidx.room:room-ktx", version.ref = "room" }

# okhttp
okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okHttpLogger = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitGsonConverter = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }

# glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glideCompiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

# lifecycle
lifecycleRuntimeKtx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycleLiveDataKtx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycleViewModelKtx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycleCommonJava8 = { module = "androidx.lifecycle:lifecycle-common-java8", version.ref = "lifecycle" }
lifecycleProcess = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }

timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }

facebookLogin = { module = "com.facebook.android:facebook-login", version.ref = "facebookSdk" }

leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }

javaXInject = { module = "javax.inject:javax.inject", version.ref = "javaXInject" }

tcxzPot = { module = "com.sweetzpot.tcxzpot:lib", version.ref = "tcxzPot" }

autoValueAnnotation = { module = "com.google.auto.value:auto-value-annotations", version.ref = "autoValueAnnotation" }

guava = { module = "com.google.guava:guava", version.ref = "guava" }

# testing
junit = { module = "junit:junit", version.ref = "junit" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test" }
kotlinXCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }
androidXCoreTesting = { module = "androidx.arch.core:core-testing", version.ref = "androidXCoreTesting" }
mockitoCore = { module = "org.mockito:mockito-core", version.ref = "mockitoCore" }
mockitoKotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockitoKotlin" }
turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
mockitoAndroid = { module = "org.mockito:mockito-android", version.ref = "mockitoAndroid" }
androidXTestRunner = { module = "androidx.test:runner", version.ref = "androidXTestRunner" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espressoContrib = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
androidXTestRules = { module = "androidx.test:rules", version.ref = "androidXTestRules" }
androidXJunit = { module = "androidx.test.ext:junit", version.ref = "androidXJunit" }
uiAutomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiAutomator" }

[bundles]
compose = [
    "composeUi",
    "composeUiTooling",
    "composeFoundation",
    "composeMaterial",
    "composeMaterialIconsCore",
    "composeMaterialIconsExtended",
    "composeRuntimeLiveData",
    "composeActivity",
    "composePaging",
    "accompanistNavigation"
]
crashlytics = ["firebaseCrashlyticsKtx", "firebaseAnalyticsKtx"]
#placesDeps = [ "googlePlaces" ]
testCoroutine = [ "kotlinXCoroutinesTest", "turbine" ]
