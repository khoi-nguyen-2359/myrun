[versions]
# https://developer.android.com/studio/releases/gradle-plugin
agp = "7.4.2"

ksp = "1.5.30-1.0.0"
buildtimetracker = "0.11.1"

multidex = "1.0.3"

kotlin = "1.7.0"
coroutines = "1.6.4"
kotlinserialization = "1.3.3"

# jetpack: https://developer.android.com/jetpack/androidx/versions/all-channel
androidx-core = "1.8.0"
appcompat = "1.4.2"
activity = "1.5.0"
fragment = "1.5.0"
constraintlayout = "2.1.4"
androidmaterial = "1.6.1"
datastore = "1.0.0"
workmanager = "2.7.1"
paging = "3.1.1"
room = "2.4.2"
lifecycle = "2.5.0"
splashscreen = "1.0.0-rc01"
androidx-annotation = "1.4.0"

# compose
composecompiler = "1.2.0"
compose = "1.2.0"
pagingcompose = "1.0.0-alpha15"
accompanist = "0.25.1"
navigationcompose = "1.1.0-alpha10"

# google play services: https://developers.google.com/android/guides/releases
playservices-plugin = "4.3.13"  # https://developers.google.com/android/guides/google-services-plugin
playservices-gcm = "17.0.0"
playservices-location = "20.0.0"
playservices-auth = "20.2.0"
playservices-fitness = "21.1.0"
playservices-map = "18.0.2"

# google map
googleplaces = "2.6.0"
googlemaps-androidutils = "2.2.5"

# mapbox
mapbox-java = "5.8.0"
mapbox-maps = "10.0.0"

# firebase: https://firebase.google.com/support/release-notes/android#latest_sdk_versions
firebase-bom = "30.3.0"
firebase-crashlytics-plugin = "2.9.1"
firebase-perf-plugin = "1.4.1"

# others
guava = "30.1.1-android"
okhttp = "4.10.0"
gson = "2.9.0"
retrofit = "2.9.0"
dagger = "2.43.2"
anvil = "2.4.1"
timber = "5.0.1"
glide = "4.13.2"
coil = "2.1.0"
facebook = "9.1.1"
tcxzpot = "0.2.0"
leakcanary = "2.9.1"
javax-inject = "1"

# testing
junit = "4.13.2"
mockito-core = "3.11.2"
mockito-kotlin = "3.2.0"
mockito-android = "3.5.10"

androidx-coretesting = "2.1.0"
androidx-testrunner = "1.4.0"
androidx-testrules = "1.4.0"
androidx-junit = "1.1.3"

uiautomator = "2.2.0"
espresso = "3.4.0"
turbine = "0.8.0"

[libraries]
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
buildtimetracker = { module = "net.rdrei.android.buildtimetracker:gradle-plugin", version.ref = "buildtimetracker" }

kotlingradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

multidex = { module = "com.android.support:multidex", version.ref = "multidex" }
androidmaterial = { module = "com.google.android.material:material", version.ref = "androidmaterial" }

# android-x
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appcompat" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
constraintlayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintlayout" }
paging = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
activity = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
workmanager = { module = "androidx.work:work-runtime-ktx", version.ref = "workmanager" }
splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }
datastore = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

# compose
# compose preview support: https://issuetracker.google.com/issues/227767363
androidx-customview = { module = "androidx.customview:customview", version = "1.2.0-alpha01" }
androidx-customview-poolingcontainer = { module = "androidx.customview:customview-poolingcontainer", version = "1.0.0-alpha01" }

compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-uitooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-materialicons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose" }
compose-materialicons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
compose-paging = { module = "androidx.paging:paging-compose", version.ref = "pagingcompose" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "navigationcompose" }
coilcompose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanist-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }
accompanist-navigation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }
accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "accompanist" }
accompanist-webview = { module = "com.google.accompanist:accompanist-webview", version.ref = "accompanist" }

# dagger
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggercompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
anvil-plugin = { module = "com.squareup.anvil:gradle-plugin", version.ref = "anvil" }
anvil-annotations = { module = "com.squareup.anvil:annotations", version.ref = "anvil" }

# kotlinx
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinserialization" }

# kotlin
kotlinserialization-plugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinreflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-storage-ktx = { module = "com.google.firebase:firebase-storage-ktx" }
firebase-perf-ktx = { module = "com.google.firebase:firebase-perf-ktx" }
firebase-crashlytics-plugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebase-crashlytics-plugin" }
firebase-perf-plugin = { module = "com.google.firebase:perf-plugin", version.ref = "firebase-perf-plugin" }

# playservices
playservices-plugin = { module = "com.google.gms:google-services", version.ref = "playservices-plugin" }
playservices-location = { module = "com.google.android.gms:play-services-location", version.ref = "playservices-location" }
playservices-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playservices-auth" }
playservices-fitness = { module = "com.google.android.gms:play-services-fitness", version.ref = "playservices-fitness" }
playservices-gcm = { module = "com.google.android.gms:play-services-gcm", version.ref = "playservices-gcm" }
playservices-map = { module = "com.google.android.gms:play-services-maps", version.ref = "playservices-map" }

# google maps
googlemaps-androidutils = { module = "com.google.maps.android:android-maps-utils", version.ref = "googlemaps-androidutils" }
googleplaces = { module = "com.google.android.libraries.places:places", version.ref = "googleplaces" }

# mapbox
mapbox-java-services = { module = "com.mapbox.mapboxsdk:mapbox-sdk-services", version.ref = "mapbox-java" }
mapbox-maps = { module = "com.mapbox.maps:android", version.ref = "mapbox-maps" }

# room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# okhttp
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okhttplogger = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitconverter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }

# glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glidecompiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

# lifecycle
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }

# others
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
facebook-login = { module = "com.facebook.android:facebook-login", version.ref = "facebook" }
leakcanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakcanary" }
javax-inject = { module = "javax.inject:javax.inject", version.ref = "javax-inject" }
tcxzpot = { module = "com.sweetzpot.tcxzpot:lib", version.ref = "tcxzpot" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

# testing
junit = { module = "junit:junit", version.ref = "junit" }
kotlintest = { module = "org.jetbrains.kotlin:kotlin-test" }
kotlinx-coroutinestest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

androidx-coretesting = { module = "androidx.arch.core:core-testing", version.ref = "androidx-coretesting" }
androidx-testrunner = { module = "androidx.test:runner", version.ref = "androidx-testrunner" }
androidx-testrules = { module = "androidx.test:rules", version.ref = "androidx-testrules" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito-core" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-kotlin" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito-android" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espresso-contrib = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
uiautomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiautomator" }

[bundles]
compose = [
    "compose-ui",
    "compose-uitooling-preview",
    "compose-foundation",
    "compose-material",
    "compose-materialicons-core",
    "compose-materialicons-extended",
    "compose-runtime-livedata",
    "compose-activity",
    "compose-paging",
    "accompanist-navigation"
]
compose-preview = [
    "compose-uitooling",
    "androidx-customview",
    "androidx-customview-poolingcontainer"
]
crashlytics = ["firebase-crashlytics-ktx", "firebase-analytics-ktx"]
#placesDeps = [ "googleplaces" ]
testCoroutine = ["kotlinx-coroutinestest", "turbine"]
firebase-data = ["firebase-auth-ktx", "firebase-firestore-ktx", "firebase-storage-ktx"]
