[versions]
agp = "7.0.3"
ksp = "1.5.30-1.0.0"
build-time-tracker = "0.11.1"

multidex = "1.0.3"

kotlin = "1.5.31"
coroutines = "1.5.2"
kotlinserialization = "1.2.1"

# jetpack: https://developer.android.com/jetpack/androidx/versions/all-channel
androidx-core = "1.6.0"
appCompat = "1.3.1"
activity = "1.3.0"
fragment = "1.3.6"
constraintLayout = "2.1.0"
androidMaterial = "1.4.0"
dataStore = "1.0.0"
workManager = "2.7.1"
paging = "3.0.1"
room = "2.3.0"
lifecycle = "2.4.0"
splashScreen = "1.0.0-alpha02"
androidx-annotation = "1.2.0"

# compose
compose = "1.0.5"
pagingCompose = "1.0.0-alpha14"
accompanist = "0.20.2"
composenavigation = "2.4.0-beta02"

# google play services: https://developers.google.com/android/guides/releases
playservices-plugin = "4.3.10"  # https://developers.google.com/android/guides/google-services-plugin
playservices-gcm = "17.0.0"
playservices-location = "18.0.0"
playservices-auth = "19.2.0"
playservices-fitness = "20.0.0"

# google map
androidGoogleMap = "17.0.1"
googlePlaces = "2.4.0"
androidMapUtils = "2.2.5"

# firebase
firebase-bom = "28.4.0"
firebase-crashlytics-version = "2.7.1"
firebase-perf = "1.4.0"

# others
guava = "30.1.1-android"
okhttp = "4.9.1"
gson = "2.8.6"
retrofit = "2.9.0"
dagger = "2.41"
timber = "4.7.1"
glide = "4.12.0"
coil = "1.3.0"
facebookSdk = "9.1.1"
tcxzPot = "0.2.0"
autoValueAnnotation = "1.6.3"
leakCanary = "2.7"
javaXInject = "1"

# testing
junit = "4.13.2"
mockito-core = "3.11.2"
mockito-kotlin = "3.2.0"
mockito-android = "3.5.10"

androidx-coretesting = "2.1.0"
androidx-testrunner = "1.4.0"
androidx-testrules = "1.4.0"
androidx-junit = "1.1.3"

uiAutomator = "2.2.0"
espresso = "3.4.0"
turbine = "0.6.0"

# mapbox
mapbox-java = "5.8.0"
mapbox-maps = "10.0.0"

[libraries]
agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
build-time-tracker = { module = "net.rdrei.android.buildtimetracker:gradle-plugin", version.ref = "build-time-tracker" }

kotlingradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
playservices-plugin = { module = "com.google.gms:google-services", version.ref = "playservices-plugin" }
viewBinding = { module = "androidx.databinding:viewbinding", version.ref = "agp" }

multidex = { module = "com.android.support:multidex", version.ref = "multidex" }
androidMaterial = { module = "com.google.android.material:material", version.ref = "androidMaterial" }

# android-x
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "appCompat" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
constraintLayout = { module = "androidx.constraintlayout:constraintlayout", version.ref = "constraintLayout" }
paging = { module = "androidx.paging:paging-runtime-ktx", version.ref = "paging" }
fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "fragment" }
activity = { module = "androidx.activity:activity-ktx", version.ref = "activity" }
workManager = { module = "androidx.work:work-runtime-ktx", version.ref = "workManager" }
splashScreen = { module = "androidx.core:core-splashscreen", version.ref = "splashScreen" }
dataStore = { module = "androidx.datastore:datastore-preferences", version.ref = "dataStore" }

# compose
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-uitooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-materialicons-core = { module = "androidx.compose.material:material-icons-core", version.ref = "compose" }
compose-materialicons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }
compose-runtime-livedata = { module = "androidx.compose.runtime:runtime-livedata", version.ref = "compose" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "activity" }
compose-paging = { module = "androidx.paging:paging-compose", version.ref = "pagingCompose" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "composenavigation" }
coilcompose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanist-insets = { module = "com.google.accompanist:accompanist-insets", version.ref = "accompanist" }
accompanist-navigation = { module = "com.google.accompanist:accompanist-navigation-animation", version.ref = "accompanist" }

# dagger
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
daggerAndroid = { module = "com.google.dagger:dagger-android", version.ref = "dagger" }
daggerCompiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }

# kotlinx
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlinx-coroutines-play-services = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutines" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "kotlinserialization" }

# kotlin
kotlinserialization-plugin = { module = "org.jetbrains.kotlin:kotlin-serialization", version.ref = "kotlin" }
kotlinReflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }

# firebase
firebase-bom = { module = "com.google.firebase:firebase-bom", version.ref = "firebase-bom" }
firebase-auth-ktx = { module = "com.google.firebase:firebase-auth-ktx" }
firebase-firestore-ktx = { module = "com.google.firebase:firebase-firestore-ktx" }
firebase-crashlytics-ktx = { module = "com.google.firebase:firebase-crashlytics-ktx" }
firebase-analytics-ktx = { module = "com.google.firebase:firebase-analytics-ktx" }
firebase-storage-ktx = { module = "com.google.firebase:firebase-storage-ktx" }
firebase-perf-ktx = { module = "com.google.firebase:firebase-perf-ktx" }
firebase-crashlytics-plugin = { module = "com.google.firebase:firebase-crashlytics-gradle", version.ref = "firebase-crashlytics-version" }
firebase-perf-plugin = { module = "com.google.firebase:perf-plugin", version.ref = "firebase-perf" }

# playservices
playservices-location = { module = "com.google.android.gms:play-services-location", version.ref = "playservices-location" }
playservices-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "playservices-auth" }
playservices-fitness = { module = "com.google.android.gms:play-services-fitness", version.ref = "playservices-fitness" }
playservices-gcm = { module = "com.google.android.gms:play-services-gcm", version.ref = "playservices-gcm" }

# google maps
androidMapUtils = { module = "com.google.maps.android:android-maps-utils", version.ref = "androidMapUtils" }
androidGoogleMap = { module = "com.google.android.gms:play-services-maps", version.ref = "androidGoogleMap" }
googlePlaces = { module = "com.google.android.libraries.places:places", version.ref = "googlePlaces" }

# mapbox
mapbox-java-services = { module = "com.mapbox.mapboxsdk:mapbox-sdk-services", version.ref = "mapbox-java" }
mapbox-maps = { module = "com.mapbox.maps:android", version.ref = "mapbox-maps" }

# room
room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

# okhttp
okHttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okHttpLogger = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp" }

# retrofit
retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "retrofit" }
retrofitconverter-gson = { module = "com.squareup.retrofit2:converter-gson", version.ref = "retrofit" }

# glide
glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide" }
glideCompiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide" }

# lifecycle
lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "lifecycle" }
lifecycle-livedata-ktx = { module = "androidx.lifecycle:lifecycle-livedata-ktx", version.ref = "lifecycle" }
lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle" }
lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "lifecycle" }

# others
timber = { module = "com.jakewharton.timber:timber", version.ref = "timber" }
facebookLogin = { module = "com.facebook.android:facebook-login", version.ref = "facebookSdk" }
leakCanary = { module = "com.squareup.leakcanary:leakcanary-android", version.ref = "leakCanary" }
javaXInject = { module = "javax.inject:javax.inject", version.ref = "javaXInject" }
tcxzPot = { module = "com.sweetzpot.tcxzpot:lib", version.ref = "tcxzPot" }
autoValueAnnotation = { module = "com.google.auto.value:auto-value-annotations", version.ref = "autoValueAnnotation" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }

# testing
junit = { module = "junit:junit", version.ref = "junit" }
kotlinTest = { module = "org.jetbrains.kotlin:kotlin-test" }
kotlinXCoroutinesTest = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "coroutines" }

androidx-coretesting = { module = "androidx.arch.core:core-testing", version.ref = "androidx-coretesting" }
androidx-testrunner = { module = "androidx.test:runner", version.ref = "androidx-testrunner" }
androidx-testrules = { module = "androidx.test:rules", version.ref = "androidx-testrules" }
androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-junit" }

mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito-core" }
mockito-kotlin = { module = "org.mockito.kotlin:mockito-kotlin", version.ref = "mockito-kotlin" }
mockito-inline = { module = "org.mockito:mockito-inline", version.ref = "mockito-kotlin" }
mockito-android = { module = "org.mockito:mockito-android", version.ref = "mockito-android" }

turbine = { module = "app.cash.turbine:turbine", version.ref = "turbine" }
espressoCore = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
espressoContrib = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso" }
uiAutomator = { module = "androidx.test.uiautomator:uiautomator", version.ref = "uiAutomator" }

[bundles]
compose = [
    "compose-ui",
    "compose-uitooling",
    "compose-foundation",
    "compose-material",
    "compose-materialicons-core",
    "compose-materialicons-extended",
    "compose-runtime-livedata",
    "compose-activity",
    "compose-paging",
    "accompanist-navigation"
]
crashlytics = ["firebase-crashlytics-ktx", "firebase-analytics-ktx"]
#placesDeps = [ "googlePlaces" ]
testCoroutine = ["kotlinXCoroutinesTest", "turbine"]
firebase-data = ["firebase-auth-ktx", "firebase-firestore-ktx", "firebase-storage-ktx"]
