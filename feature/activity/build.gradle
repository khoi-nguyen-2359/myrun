plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

android {
    compileSdk project.compileSdk

    defaultConfig {
        minSdk project.minSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        rc {
            debuggable true
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion libs.versions.compose.get()
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = "11"
        useIR = true
        allWarningsAsErrors = true
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
}

dependencies {
    implementation(project(':feature:core'))

    implementation(project(':domain'))

    implementation(project(':data:location'))
    implementation(project(':data:activity'))
    implementation(project(':data:user'))
    implementation(project(':data:eapps'))

    implementation(project(":base:di"))
    implementation(project(':base:firebase'))
    implementation(libs.bundles.firebase.data)

    implementation(libs.constraintLayout)

    implementation(libs.bundles.compose)
    implementation(libs.accompanist.placeholder)
    implementation(libs.accompanist.insets)
    implementation(libs.coilcompose)

    implementation(libs.androidx.appcompat)

    implementation(libs.timber)

    implementation(libs.lifecycle.viewmodel.ktx)

    implementation(libs.androidMapUtils)
    implementation(libs.androidGoogleMap)
    implementation(libs.googlePlaces)

    implementation(libs.dagger)
    kapt(libs.daggerCompiler)

    testImplementation(libs.bundles.testCoroutine)
    testImplementation(libs.kotlinTest)
    testImplementation(libs.mockito.kotlin)
    testImplementation(libs.kotlinReflect)
}
